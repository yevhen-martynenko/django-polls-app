events {}

pid /mnt/refuli/refuli/__programming__/__projects__/polls/polls/server/nginx.pid;

http {
    error_log /mnt/refuli/refuli/__programming__/__projects__/polls/polls/logs/nginx-error.log warn;
    access_log /mnt/refuli/refuli/__programming__/__projects__/polls/polls/logs/nginx-access.log;

    include mime.types;
    default_type application/octet-stream;

    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=limitzone:10m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    server_tokens off;
    autoindex off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    client_body_timeout 10;
    client_header_timeout 10;
    send_timeout 10;
    keepalive_timeout  20 15;

    open_file_cache max=5000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    server {
        listen 9000;
        listen 443 ssl;
        server_name polls.test;

        ssl_certificate /mnt/refuli/refuli/__programming__/__projects__/polls/polls/server/cert.pem;
        ssl_certificate_key /mnt/refuli/refuli/__programming__/__projects__/polls/polls/server/key.pem;

        root /mnt/refuli/refuli/__programming__/__projects__/polls/polls/www/public/;

        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 403;
        }
        limit_conn limitzone 20;

        location /prefix/ {
            alias /mnt/refuli/refuli/__programming__/__projects__/polls/polls/www/public/;
        }

        location / {
            limit_req zone=mylimit burst=5 nodelay;
            limit_conn addr 10;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass http://127.0.0.1:9001;
            proxy_redirect off;
        }
    }

    server {
        listen 80;
        server_name polls.test;

        location / {
            return 301 https://$host$request_uri;
        }
    }
}